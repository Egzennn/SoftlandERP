@model DownloadableFormCreateModel


<div class="modal-header">
    <h1 class="modal-title fs-5" id="modal-title">@ViewBag.ModalTitle</h1>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>
@using (Html.BeginForm("Create", "ADDownloadableForm", FormMethod.Post, new { @id = "createform" }))
{
    @Html.HiddenFor(model => model.DownloadableForm.Id)
    @Html.HiddenFor(model => model.DownloadableForm.Created)
    @Html.HiddenFor(model => model.DownloadableForm.CreatedBy)
    <div class="modal-body">
        <blockquote class="danger">
            <div class="form-group">
                <label class="col-form-label" for="Form.Category">@Html.DisplayNameFor(model => model.DownloadableForm.Category)</label>
                @Html.TextBoxFor(model => model.DownloadableForm.Category, new { @class = "form-control", required="required" })
                @try
                {
                    <div class="form-helper">@Model.HelperTexts.Where(x => x.Entity == "DownloadableForm" && x.FieldName == "Category").FirstOrDefault()?.FieldHelperText</div>
                }
                catch { }
            </div>
            <div class="form-group">
                <label class="col-form-label" for="Form.Path">@Html.DisplayNameFor(model => model.DownloadableForm.Path)</label>
                @Html.TextBoxFor(model => model.DownloadableForm.Path, new { @class = "form-control", required="required" })
                @try
                {
                    <div class="form-helper">@Model.HelperTexts.Where(x => x.Entity == "DownloadableForm" && x.FieldName == "Path").FirstOrDefault()?.FieldHelperText</div>
                }
                catch { }
            </div>
        </blockquote>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Odrzuć</button>
        <button type="submit" class="btn btn-primary" value="Submit">Zapisz</button>
    </div>
}