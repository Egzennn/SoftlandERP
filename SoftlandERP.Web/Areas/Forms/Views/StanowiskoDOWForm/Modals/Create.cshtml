@model StanowiskoDOWForm

<div class="modal-header">
    <h1 class="modal-title fs-5" id="modal-title">@ViewBag.ModalTitle</h1>
    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
</div>

@using (Html.BeginForm("Create", "StanowiskoDOWForm", FormMethod.Post, new { @id = "createform", @autocomplete = "off" }))
{
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Created)
    @Html.HiddenFor(model => model.CreatedBy)
    <div class="modal-body">
        <div class="row">
            <blockquote class="danger">
                <div class="form-group">
                    <label class="col-form-label" for="Obiekt">@Html.DisplayNameFor(model => model.Obiekt)</label>
                    @Html.DropDownListFor(model => model.Obiekt, ViewBag.Obiekt as SelectList, new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.Obiekt, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="col-form-label" for="IDI">@Html.DisplayNameFor(model => model.IDI)</label>
                    @Html.TextBoxFor(model => model.IDI, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IDI, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="col-form-label" for="Nazwa">@Html.DisplayNameFor(model => model.Nazwa)</label>
                    @Html.TextBoxFor(model => model.Nazwa, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Nazwa, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="col-form-label" for="Odpowiedzialny">@Html.DisplayNameFor(model => model.Odpowiedzialny)</label>
                    @Html.TextBoxFor(model => model.Odpowiedzialny, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Odpowiedzialny, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="col-form-label" for="Zdarzenie">@Html.DisplayNameFor(model => model.Zdarzenie)</label>
                    @Html.DropDownListFor(model => model.Zdarzenie, ViewBag.Zdarzenie as SelectList, new { @class = "form-control select2" })
                    @Html.ValidationMessageFor(model => model.Zdarzenie, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="col-form-label" for="Opis">@Html.DisplayNameFor(model => model.Opis)</label>
                    @Html.TextBoxFor(model => model.Opis, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="col-form-label" for="Termin">@Html.DisplayNameFor(model => model.Termin)</label>
                    @Html.TextBoxFor(model => model.Termin, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date"})
                    @Html.ValidationMessageFor(model => model.Termin, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="col-form-label" for="ObszarRoboczy">@Html.DisplayNameFor(model => model.ObszarRoboczy)</label>
                    @Html.TextBoxFor(model => model.ObszarRoboczy, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ObszarRoboczy, "", new { @class = "text-danger" })
                </div>
                @if (Model.CreatedBy != null)
                {
                    <div class="form-group">
                        <label class="col-form-label" for="Stan">@Html.DisplayNameFor(model => model.Stan)</label>
                        @Html.DropDownListFor(model => model.Stan, ViewBag.Stany as SelectList, new { @class = "form-control select2" })
                        @Html.ValidationMessageFor(model => model.Stan, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label class="col-form-label" for="Status">@Html.DisplayNameFor(model => model.Status)</label>
                        @Html.DropDownListFor(model => model.Status, ViewBag.Statusy as SelectList, new { @class = "form-control select2" })
                        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                    </div>
                }
            </blockquote>
        </div>
    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Odrzuć</button>
        <button type="submit" class="btn btn-primary" value="Submit">Zapisz</button>
    </div>
}


<script>
    $('.select2').select2({
        dropdownParent: $('#modal-content')
    });
</script>
<script src="~/vendor/jquery-validation/jquery.validate.js"></script>
<script src="~/vendor/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>

