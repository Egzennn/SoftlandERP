// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SoftlandERP.Data.DB;

#nullable disable

namespace SoftlandERP.Data.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20230626113726_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Dokumenty.DokumentyKosztObslugi", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DokumentyKosztObslugi");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Dokumenty.DokumentyRodzajKosztu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DokumentyRodzajKosztu");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Dokumenty.DokumentyRodzajPrzesylki", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DokumentyRodzajPrzesylki");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Dokumenty.DokumentySymbolDokumentu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DokumentySymbolDokumentu");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Dokumenty.DokumentyTemat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DokumentyTemat");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Dokumenty.DokumentyWnioski", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DokumentyWnioski");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.MPKForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("IDK")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IDS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Kwota")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MPKList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrDokumentu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RodzajKosztu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Waluta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wlasciciel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MPKForms");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Ogolne.OgolneRola", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OgolneRola");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Ogolne.OgolneStan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OgolneStan");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Ogolne.OgolneStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OgolneStatus");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Oprogramowanie.OprogramowanieInstalacja", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OprogramowanieInstalacja");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Oprogramowanie.OprogramowanieTyp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OprogramowanieTyp");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Spedycja.SpedycjaAkronimCzynnosciPakowania", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpedycjaAkronimCzynnosciPakowania");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Spedycja.SpedycjaAkronimDokumentu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpedycjaAkronimDokumentu");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Spedycja.SpedycjaPlatnik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpedycjaPlatnik");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Spedycja.SpedycjaPrzewoznik", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpedycjaPrzewoznik");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Spedycja.SpedycjaRodzajDokumentu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpedycjaRodzajDokumentu");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Spedycja.SpedycjaStatus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SpedycjaStatus");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Towar.TowarSekcje", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TowarSekcje");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Towar.TowarSekcjeParametry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TowarSekcjeParametry");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Forms.Towar.TowarSekcjeParametryWartosc", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Odpowiedzialny")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Typ2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wartosc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TowarSekcjeParametryWartosc");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.General.ApplicationPermissionsRule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ADGroupDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ManagerOnly")
                        .HasColumnType("bit");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationPermissionRules");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.General.HelperText", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldHelperText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HelperTextVocabulary");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7d52b771-e42b-4a57-8dbd-a4dd25f0b658"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1162),
                            Entity = "ADUser",
                            FieldDisplayName = "Imię",
                            FieldName = "FirstName"
                        },
                        new
                        {
                            Id = new Guid("dad57be0-3ed7-4a67-9647-041d144f6d9c"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1335),
                            Entity = "ADUser",
                            FieldDisplayName = "Nazwisko",
                            FieldName = "LastName"
                        },
                        new
                        {
                            Id = new Guid("2b74d52e-909d-4204-abd6-c7ded0b9f49b"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1379),
                            Entity = "ADUser",
                            FieldDisplayName = "Email",
                            FieldName = "EmailAddress"
                        },
                        new
                        {
                            Id = new Guid("b80620c3-a0bb-451c-9932-7e834469d642"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1423),
                            Entity = "ADUser",
                            FieldDisplayName = "Telefon stanowiskowy",
                            FieldName = "Mobile"
                        },
                        new
                        {
                            Id = new Guid("ce0f8135-d543-4ee0-aefd-4c696db4327e"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1502),
                            Entity = "ADUser",
                            FieldDisplayName = "Telefon działowy",
                            FieldName = "DepartmentMobile"
                        },
                        new
                        {
                            Id = new Guid("26689713-fce4-4f4b-a914-4eeb06d05345"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1559),
                            Entity = "ADUser",
                            FieldDisplayName = "Akronim",
                            FieldName = "Login"
                        },
                        new
                        {
                            Id = new Guid("fc02a820-ec41-4bc6-ac33-6307b9725ed5"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1597),
                            Entity = "ADUser",
                            FieldName = "AccountExpirationDateCheck"
                        },
                        new
                        {
                            Id = new Guid("b998ea5d-3503-49b3-b4b0-78a01a1ca17e"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1715),
                            Entity = "ADUser",
                            FieldDisplayName = "Data wygaśnieńcia konta",
                            FieldName = "AccountExpirationDate"
                        },
                        new
                        {
                            Id = new Guid("de3e4b5b-ffe1-4b81-b329-870b46176988"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1758),
                            Entity = "ADUser",
                            FieldDisplayName = "Hasło",
                            FieldName = "Password"
                        },
                        new
                        {
                            Id = new Guid("81019b56-8503-4ef6-8f89-d9feeb13d214"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1796),
                            Entity = "ADUser",
                            FieldDisplayName = "Czy jest aktywny?",
                            FieldName = "Enabled"
                        },
                        new
                        {
                            Id = new Guid("7b703556-89e2-4077-96d1-f5488baf8af0"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1831),
                            Entity = "ADUser",
                            FieldDisplayName = "Haslo nigdy nie wygasa",
                            FieldName = "PasswordNeverExpires"
                        },
                        new
                        {
                            Id = new Guid("95b154a7-16c7-4e57-9cbb-a569807cdff1"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1866),
                            Entity = "ADUser",
                            FieldDisplayName = "Użytkownik musi zmienić hasło przy następnym logowaniu",
                            FieldName = "UserMustChangePassword"
                        },
                        new
                        {
                            Id = new Guid("eb64fbbe-57ea-4454-b550-01233f0b07e7"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1901),
                            Entity = "ADUser",
                            FieldDisplayName = "Użytkownik nie może zmienić hasło",
                            FieldName = "UserCannotChangePassword"
                        },
                        new
                        {
                            Id = new Guid("ba6fb9af-1f73-4393-8cad-3722be0d26ed"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(1941),
                            Entity = "ADUser",
                            FieldDisplayName = "Address",
                            FieldName = "Address"
                        },
                        new
                        {
                            Id = new Guid("b7bcb0f0-2739-4c63-b88f-4a5afd897d1f"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2033),
                            Entity = "ADUser",
                            FieldDisplayName = "Firma",
                            FieldName = "Company"
                        },
                        new
                        {
                            Id = new Guid("e1ea6385-b63c-4d25-9f7c-fcbf09d505e2"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2070),
                            Entity = "ADUser",
                            FieldDisplayName = "Dział",
                            FieldName = "Department"
                        },
                        new
                        {
                            Id = new Guid("5bd72ccf-25d6-4d48-abc5-1a624eeeb62e"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2104),
                            Entity = "ADUser",
                            FieldDisplayName = "Stanowisko",
                            FieldName = "JobTitle"
                        },
                        new
                        {
                            Id = new Guid("cf77ddd2-c860-4573-86c3-619c2e0a6d0b"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2141),
                            Entity = "ADUser",
                            FieldDisplayName = "Przyłożony",
                            FieldName = "Manager"
                        },
                        new
                        {
                            Id = new Guid("b40d9656-e2a3-43cc-a561-5d5066c91e46"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2209),
                            Entity = "ApplicationPermissionsRule",
                            FieldDisplayName = "Nazwa modulu",
                            FieldName = "Module"
                        },
                        new
                        {
                            Id = new Guid("c35dad0c-bbb7-4a6c-a7cd-c1489df0a759"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2247),
                            Entity = "ApplicationPermissionsRule",
                            FieldDisplayName = "Grupa Active Directory",
                            FieldName = "ADGroupDisplayName"
                        },
                        new
                        {
                            Id = new Guid("8f1c5357-5f7c-4ce1-90e2-4fd36fe28e80"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2536),
                            Entity = "ApplicationPermissionsRule",
                            FieldDisplayName = "Tylko przełożony",
                            FieldName = "ManagerOnly"
                        },
                        new
                        {
                            Id = new Guid("8a823de6-579f-47a4-ad6c-edfc9b43dd35"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2629),
                            Entity = "UserAddress",
                            FieldDisplayName = "Kraj",
                            FieldName = "Country"
                        },
                        new
                        {
                            Id = new Guid("a2393df1-fa19-42ff-885f-8f92423c2d81"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2681),
                            Entity = "UserAddress",
                            FieldDisplayName = "Miasto",
                            FieldName = "City"
                        },
                        new
                        {
                            Id = new Guid("0bd4f094-5392-49e8-b2c2-d6c2fc8738f3"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2715),
                            Entity = "UserAddress",
                            FieldDisplayName = "Street",
                            FieldName = "Street"
                        },
                        new
                        {
                            Id = new Guid("03a6f190-9d5e-4271-ba05-a1eaf3bc7f4b"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2772),
                            Entity = "DownloadableForm",
                            FieldDisplayName = "Kategoria",
                            FieldName = "Category"
                        },
                        new
                        {
                            Id = new Guid("d241e088-2973-4417-a132-ab3312b2d7b7"),
                            Created = new DateTime(2023, 6, 26, 13, 37, 26, 673, DateTimeKind.Local).AddTicks(2808),
                            Entity = "DownloadableForm",
                            FieldDisplayName = "Ścieżka",
                            FieldName = "Path"
                        });
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Staff.DownloadableForm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DownloadFormVocabulary");
                });

            modelBuilder.Entity("SoftlandERP.Data.Entities.Vocabularies.Staff.UserAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwoLetterISOCountryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("datetime2");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserAddressVocabulary");
                });
#pragma warning restore 612, 618
        }
    }
}
